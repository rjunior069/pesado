{"ast":null,"code":"import axios from \"axios\";\nimport { ADD_POST, GET_ERRORS, GET_POSTS, POST_LOADING, DELETE_POST, GET_POST, CLEAR_ERRORS } from \"./types\"; // Add Post\n\nexport const addPost = postData => dispatch => {\n  dispatch(clearErrors());\n  axios.post(\"/api/post\", postData).then(res => dispatch({\n    type: ADD_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Get Posts\n\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading());\n  axios.get(\"/api/post\").then(res => dispatch({\n    type: GET_POSTS,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POSTS,\n    payload: null\n  }));\n}; // Get Post\n\nexport const getPost = id => dispatch => {\n  dispatch(setPostLoading());\n  axios.get(\"/api/post/\".concat(id)).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_POST,\n    payload: null\n  }));\n}; // Delete Post\n\nexport const deletePost = id => dispatch => {\n  axios.delete(\"/api/post/\".concat(id)).then(res => dispatch({\n    type: DELETE_POST,\n    payload: id\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Add Like\n\nexport const addLike = id => dispatch => {\n  axios.post(\"/api/post/like/\".concat(id)).then(res => dispatch(getPosts())).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Remove Like\n\nexport const removeLike = id => dispatch => {\n  axios.post(\"/api/post/unlike/\".concat(id)).then(res => dispatch(getPosts())).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Add Comment\n\nexport const addComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios.post(\"/api/post/comment/\".concat(postId), commentData).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Add Comment\n\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios.delete(\"/api/post/comment/\".concat(postId, \"/\").concat(commentId)).then(res => dispatch({\n    type: GET_POST,\n    payload: res.data\n  })).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n}; // Set Loading State\n\nexport const setPostLoading = () => {\n  return {\n    type: POST_LOADING\n  };\n}; // Clear Errors\n\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};","map":{"version":3,"sources":["/home/reinaldo.junior/Documentos/Referencia/pesado/bootcamp/frontend/src/actions/postActions.js"],"names":["axios","ADD_POST","GET_ERRORS","GET_POSTS","POST_LOADING","DELETE_POST","GET_POST","CLEAR_ERRORS","addPost","postData","dispatch","clearErrors","post","then","res","type","payload","data","catch","err","response","getPosts","setPostLoading","get","getPost","id","deletePost","delete","addLike","removeLike","addComment","postId","commentData","deleteComment","commentId"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nimport {\n  ADD_POST,\n  GET_ERRORS,\n  GET_POSTS,\n  POST_LOADING,\n  DELETE_POST,\n  GET_POST,\n  CLEAR_ERRORS\n} from \"./types\";\n\n// Add Post\nexport const addPost = postData => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post(\"/api/post\", postData)\n    .then(res =>\n      dispatch({\n        type: ADD_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Get Posts\nexport const getPosts = () => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .get(\"/api/post\")\n    .then(res =>\n      dispatch({\n        type: GET_POSTS,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_POSTS,\n        payload: null\n      })\n    );\n};\n\n// Get Post\nexport const getPost = id => dispatch => {\n  dispatch(setPostLoading());\n  axios\n    .get(`/api/post/${id}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_POST,\n        payload: null\n      })\n    );\n};\n\n// Delete Post\nexport const deletePost = id => dispatch => {\n  axios\n    .delete(`/api/post/${id}`)\n    .then(res =>\n      dispatch({\n        type: DELETE_POST,\n        payload: id\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Like\nexport const addLike = id => dispatch => {\n  axios\n    .post(`/api/post/like/${id}`)\n    .then(res => dispatch(getPosts()))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Remove Like\nexport const removeLike = id => dispatch => {\n  axios\n    .post(`/api/post/unlike/${id}`)\n    .then(res => dispatch(getPosts()))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Comment\nexport const addComment = (postId, commentData) => dispatch => {\n  dispatch(clearErrors());\n  axios\n    .post(`/api/post/comment/${postId}`, commentData)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Add Comment\nexport const deleteComment = (postId, commentId) => dispatch => {\n  axios\n    .delete(`/api/post/comment/${postId}/${commentId}`)\n    .then(res =>\n      dispatch({\n        type: GET_POST,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set Loading State\nexport const setPostLoading = () => {\n  return {\n    type: POST_LOADING\n  };\n};\n\n// Clear Errors\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n"]},"metadata":{},"sourceType":"module"}