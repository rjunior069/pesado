{"ast":null,"code":"import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nexport const registerUser = (userData, history) => dispatch => {\n  axios.post(\"/api/user/register\", userData).then(res => history.push(\"/login\")).catch(err => dispatch({\n    type: GET_ERRORS,\n    payload: err.response.data\n  }));\n};\nexport const loginUser = userData => dispatch => {\n  axios.post(\"/api/user/login\", userData).then(res => {\n    // Save to localStorage\n    const token = res.data.token; // Set token to ls\n\n    localStorage.setItem(\"jwtToken\", token); // Set token to auth header\n\n    setAuthToken(token); // Decode token to get user data\n\n    const decoded = jwt_decode(token); // Set current User\n\n    dispatch(setCurrentUser(decoded));\n  }).catch(err => dispatch({\n    type: GET_ERRORS,\n    _payload: err.response.data,\n\n    get payload() {\n      return this._payload;\n    },\n\n    set payload(value) {\n      this._payload = value;\n    }\n\n  }));\n}; // Set logged in User\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // Log user out\n\nexport const logoutUser = () => dispatch => {\n  // Remove token from localstorage\n  localStorage.removeItem(\"jwtToken\"); // Remove the auth header for future requests\n\n  setAuthToken(false); // Set current user to {} which will set isAuthenticated to false\n\n  dispatch(setCurrentUser({}));\n};","map":{"version":3,"sources":["/home/reinaldo.junior/Documentos/Referencia/pesado/bootcamp/frontend/src/actions/authAction.js"],"names":["axios","setAuthToken","jwt_decode","GET_ERRORS","SET_CURRENT_USER","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","_payload","value","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,SAA7C;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuBC,QAAQ,IAAI;AAC7DR,EAAAA,KAAK,CACFS,IADH,CACQ,oBADR,EAC8BH,QAD9B,EAEGI,IAFH,CAEQC,GAAG,IAAIJ,OAAO,CAACK,IAAR,CAAa,QAAb,CAFf,EAGGC,KAHH,CAGSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEZ,UADC;AAEPa,IAAAA,OAAO,EAAEF,GAAG,CAACG,QAAJ,CAAaC;AAFf,GAAD,CAJZ;AASD,CAVM;AAYP,OAAO,MAAMC,SAAS,GAAGb,QAAQ,IAAIE,QAAQ,IAAI;AAC/CR,EAAAA,KAAK,CACFS,IADH,CACQ,iBADR,EAC2BH,QAD3B,EAEGI,IAFH,CAEQC,GAAG,IAAI;AACX;AADW,UAEHS,KAFG,GAEOT,GAAG,CAACO,IAFX,CAEHE,KAFG,EAGX;;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCF,KAAjC,EAJW,CAKX;;AACAnB,IAAAA,YAAY,CAACmB,KAAD,CAAZ,CANW,CAOX;;AACA,UAAMG,OAAO,GAAGrB,UAAU,CAACkB,KAAD,CAA1B,CARW,CASX;;AACAZ,IAAAA,QAAQ,CAACgB,cAAc,CAACD,OAAD,CAAf,CAAR;AACD,GAbH,EAcGV,KAdH,CAcSC,GAAG,IACRN,QAAQ,CAAC;AACPO,IAAAA,IAAI,EAAEZ,UADC;AAEPsB,IAAAA,QAAQ,EAAEX,GAAG,CAACG,QAAJ,CAAaC,IAFhB;;AAGP,QAAIF,OAAJ,GAAc;AACZ,aAAO,KAAKS,QAAZ;AACD,KALM;;AAMP,QAAIT,OAAJ,CAAYU,KAAZ,EAAmB;AACjB,WAAKD,QAAL,GAAgBC,KAAhB;AACD;;AARM,GAAD,CAfZ;AA0BD,CA3BM,C,CA6BP;;AACA,OAAO,MAAMF,cAAc,GAAGD,OAAO,IAAI;AACvC,SAAO;AACLR,IAAAA,IAAI,EAAEX,gBADD;AAELY,IAAAA,OAAO,EAAEO;AAFJ,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMI,UAAU,GAAG,MAAMnB,QAAQ,IAAI;AAC1C;AACAa,EAAAA,YAAY,CAACO,UAAb,CAAwB,UAAxB,EAF0C,CAG1C;;AACA3B,EAAAA,YAAY,CAAC,KAAD,CAAZ,CAJ0C,CAK1C;;AACAO,EAAAA,QAAQ,CAACgB,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,CAPM","sourcesContent":["import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\n\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post(\"/api/user/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\nexport const loginUser = userData => dispatch => {\n  axios\n    .post(\"/api/user/login\", userData)\n    .then(res => {\n      // Save to localStorage\n      const { token } = res.data;\n      // Set token to ls\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current User\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        _payload: err.response.data,\n        get payload() {\n          return this._payload;\n        },\n        set payload(value) {\n          this._payload = value;\n        },\n      })\n    );\n};\n\n// Set logged in User\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from localstorage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove the auth header for future requests\n  setAuthToken(false);\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n"]},"metadata":{},"sourceType":"module"}