{"ast":null,"code":"var _jsxFileName = \"/home/reinaldo.junior/Documentos/Referencia/pesado/bootcamp/frontend/src/components/profile/public/Github.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport env from \"../../../environment\";\n\nclass Github extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 5,\n      sort: \"created: asc\",\n      repos: []\n    };\n  }\n\n  componentDidMount() {\n    const username = this.props.username;\n    const _this$state = this.state,\n          count = _this$state.count,\n          sort = _this$state.sort; //const base_url = process.env.REACT_APP_API_HOST;\n\n    let url;\n\n    if (env.API_URL_SCM != null) {\n      url = \"\".concat(env.API_URL_SCM, \"/api/scm/github/\").concat(username, \"/\").concat(count, \"/\").concat(sort);\n    } else {\n      url = \"\".concat(env.API_URL, \"/api/scm/github/\").concat(username, \"/\").concat(count, \"/\").concat(sort);\n    } // const url = `http://staging.api.questcode.org/scm/github/${username}/${count}/${sort}`;\n    // const url = `https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`\n\n\n    fetch(url).then(res => res.json()).then(data => {\n      this.setState({\n        repos: data\n      });\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const repos = this.state.repos;\n    const repoItems = repos.map(repo => React.createElement(\"div\", {\n      key: repo.id,\n      className: \"card card-body mb-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: repo.html_url,\n      className: \"text-info\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, repo.name)), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, repo.description)), React.createElement(\"div\", {\n      className: \"col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"badge badge-info mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Stars: \", repo.stargazers_count), React.createElement(\"span\", {\n      className: \"badge badge-secundary mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Watchers: \", repo.watchers_count), React.createElement(\"span\", {\n      className: \"badge badge-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Forks: \", repo.forks_count)))));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"mb-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"\\xDAltimos Reposit\\xF3rios\"), repoItems);\n  }\n\n}\n\nGithub.propTypes = {\n  username: PropTypes.string.isRequired\n};\nexport default Github;","map":{"version":3,"sources":["/home/reinaldo.junior/Documentos/Referencia/pesado/bootcamp/frontend/src/components/profile/public/Github.js"],"names":["React","Component","PropTypes","env","Github","constructor","props","state","count","sort","repos","componentDidMount","username","url","API_URL_SCM","API_URL","fetch","then","res","json","data","setState","catch","err","console","log","render","repoItems","map","repo","id","html_url","name","description","stargazers_count","watchers_count","forks_count","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport env from \"../../../environment\";\n\nclass Github extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 5,\n      sort: \"created: asc\",\n      repos: []\n    };\n  }\n\n  componentDidMount() {\n    const { username } = this.props;\n    const { count, sort } = this.state;\n    //const base_url = process.env.REACT_APP_API_HOST;\n    let url;\n    if (env.API_URL_SCM != null) {\n      url = `${env.API_URL_SCM}/api/scm/github/${username}/${count}/${sort}`;\n    } else {\n      url = `${env.API_URL}/api/scm/github/${username}/${count}/${sort}`;\n\n    }\n    // const url = `http://staging.api.questcode.org/scm/github/${username}/${count}/${sort}`;\n    // const url = `https://api.github.com/users/${username}/repos?per_page=${count}&sort=${sort}&client_id=${clientId}&client_secret=${clientSecret}`\n    fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        this.setState({ repos: data });\n      })\n      .catch(err => console.log(err));\n  }\n  render() {\n    const { repos } = this.state;\n    const repoItems = repos.map(repo => (\n      <div key={repo.id} className=\"card card-body mb-2\">\n        <div className=\"row\">\n          <div className=\"col-md-6\">\n            <h4>\n              <a href={repo.html_url} className=\"text-info\" target=\"_blank\">\n                {repo.name}\n              </a>\n            </h4>\n            <p>{repo.description}</p>\n          </div>\n          <div className=\"col-md-6\">\n            <span className=\"badge badge-info mr-1\">\n              Stars: {repo.stargazers_count}\n            </span>\n            <span className=\"badge badge-secundary mr-1\">\n              Watchers: {repo.watchers_count}\n            </span>\n            <span className=\"badge badge-success\">\n              Forks: {repo.forks_count}\n            </span>\n          </div>\n        </div>\n      </div>\n    ));\n    return (\n      <div>\n        <hr />\n        <h3 className=\"mb-4\">Últimos Repositórios</h3>\n        {repoItems}\n      </div>\n    );\n  }\n}\n\nGithub.propTypes = {\n  username: PropTypes.string.isRequired\n};\n\nexport default Github;\n"]},"metadata":{},"sourceType":"module"}