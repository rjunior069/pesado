{"ast":null,"code":"var _jsxFileName = \"/home/reinaldo.junior/Documentos/Referencia/pesado/bootcamp/frontend/src/components/posts/PostFullView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostItem from \"./PostItem\";\nimport CommentForm from \"./comment/Form\";\nimport CommentFeed from \"./comment/Feed\";\nimport Spinner from \"../common/Spinner\";\nimport { getPost } from \"../../actions/postActions\";\nimport { Link } from \"react-router-dom\";\n\nclass PostFullView extends Component {\n  componentDidMount() {\n    this.props.getPost(this.props.match.params.id);\n  }\n\n  render() {\n    const _this$props$post = this.props.post,\n          post = _this$props$post.post,\n          loading = _this$props$post.loading;\n    let postContent;\n\n    if (post === null || loading || Object.keys(post).length === 0) {\n      postContent = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    } else {\n      postContent = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(PostItem, {\n        post: post,\n        showActions: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(CommentForm, {\n        postId: post._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(CommentFeed, {\n        postId: post._id,\n        comments: post.comments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/feed\",\n      className: \"btn btn-light mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Retornar ao Feed\"), postContent))));\n  }\n\n}\n\nPostFullView.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(PostFullView);","map":{"version":3,"sources":["/home/reinaldo.junior/Documentos/Referencia/pesado/bootcamp/frontend/src/components/posts/PostFullView.js"],"names":["React","Component","connect","PropTypes","PostItem","CommentForm","CommentFeed","Spinner","getPost","Link","PostFullView","componentDidMount","props","match","params","id","render","post","loading","postContent","Object","keys","length","_id","comments","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,YAAN,SAA2BT,SAA3B,CAAqC;AACnCU,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,OAAX,CAAmB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3C;AACD;;AAEDC,EAAAA,MAAM,GAAG;AAAA,6BACmB,KAAKJ,KAAL,CAAWK,IAD9B;AAAA,UACCA,IADD,oBACCA,IADD;AAAA,UACOC,OADP,oBACOA,OADP;AAEP,QAAIC,WAAJ;;AAEA,QAAIF,IAAI,KAAK,IAAT,IAAiBC,OAAjB,IAA4BE,MAAM,CAACC,IAAP,CAAYJ,IAAZ,EAAkBK,MAAlB,KAA6B,CAA7D,EAAgE;AAC9DH,MAAAA,WAAW,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAEF,IAAhB;AAAsB,QAAA,WAAW,EAAE,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAEA,IAAI,CAACM,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAEN,IAAI,CAACM,GAA1B;AAA+B,QAAA,QAAQ,EAAEN,IAAI,CAACO,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD;;AACD,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,OAAT;AAAiB,MAAA,SAAS,EAAC,oBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAIGL,WAJH,CADF,CADF,CADF,CADF;AAcD;;AAlCkC;;AAoCrCT,YAAY,CAACe,SAAb,GAAyB;AACvBjB,EAAAA,OAAO,EAAEL,SAAS,CAACuB,IAAV,CAAeC,UADD;AAEvBV,EAAAA,IAAI,EAAEd,SAAS,CAACyB,MAAV,CAAiBD;AAFA,CAAzB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCb,EAAAA,IAAI,EAAEa,KAAK,CAACb;AADoB,CAAL,CAA7B;;AAGA,eAAef,OAAO,CACpB2B,eADoB,EAEpB;AAAErB,EAAAA;AAAF,CAFoB,CAAP,CAGbE,YAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport PostItem from \"./PostItem\";\nimport CommentForm from \"./comment/Form\";\nimport CommentFeed from \"./comment/Feed\";\nimport Spinner from \"../common/Spinner\";\nimport { getPost } from \"../../actions/postActions\";\nimport { Link } from \"react-router-dom\";\n\nclass PostFullView extends Component {\n  componentDidMount() {\n    this.props.getPost(this.props.match.params.id);\n  }\n\n  render() {\n    const { post, loading } = this.props.post;\n    let postContent;\n\n    if (post === null || loading || Object.keys(post).length === 0) {\n      postContent = <Spinner />;\n    } else {\n      postContent = (\n        <div>\n          <PostItem post={post} showActions={false} />\n          <CommentForm postId={post._id} />\n          <CommentFeed postId={post._id} comments={post.comments} />\n        </div>\n      );\n    }\n    return (\n      <div className=\"post\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <Link to=\"/feed\" className=\"btn btn-light mb-3\">\n                Retornar ao Feed\n              </Link>\n              {postContent}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nPostFullView.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\nexport default connect(\n  mapStateToProps,\n  { getPost }\n)(PostFullView);\n"]},"metadata":{},"sourceType":"module"}